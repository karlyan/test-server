# Default values for generic-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# deployment manifest see: https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/#DeploymentSpec
deployment:
  enabled: false
  name: ""
  # Annotations to add
  annotations: {}
  # Labels to add
  labels: {}
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: nginx
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  # pod arguments
  args: []

  # container environment variables
  env: []

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # This is to override the chart name.
  nameOverride: ""
  fullnameOverride: ""

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  # see: https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#PodSpec
  ports:
    http:
      enabled: true
      protocol: TCP
      containerPort: 443
#      hostIP: 0.0.0.0
#      hostPort: 443

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: http

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  enabled: false
  name: ""
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  labels: {}
  # Automatically mount a ServiceAccount's API credentials?
  automount: true

# This section builds out the ClusterRoleBinding see: https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/cluster-role-binding-v1/
clusterRoleBinding:
  # Specifies whether this resource should be created
  enabled: false
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add
  annotations: {}
  # Labels to add
  labels: {}
  roleRef:
    name: ""

# This section builds out the ClusterRoleBinding see: https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/cluster-role-binding-v1/
clusterRole:
  # Specifies whether this resource should be created
  enabled: false
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add
  annotations: {}
  # Labels to add
  labels: {}
  rules: {}

# This section is for RoleBinding see: https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/role-binding-v1/
roleBinding:
  # Specifies whether this resource should be created
  enabled: false
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add
  annotations: {}
  # Labels to add
  labels: {}

# This section builds out the ClusterRoleBinding see: https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/role-v1/
role:
  # Specifies whether this resource should be created
  enabled: false
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add
  annotations: {}
  # Labels to add
  labels: {}
  rules: {}

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  enabled: false
  # if not set; a default name is generated using the fullname template
  name: ""
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  annotations: {}
  labels: {}
  # see: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#ServiceSpec
  ports:
    http:
      enabled: true
      containerPort: 443
      servicePort: 443
      protocol: TCP
      # hostPort: 443
      # nodePort: 30317
      # appProtocol: tcp
  selector: {}

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  # for more info about spec: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec
  spec: {}

# This section is for PVC see: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
pvc:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  spec:
    resources:
      requests:
        storage: 1Gi
    accessModes:
      - ReadWriteOnce
    storageClassName: ""

# This section is for PV see: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-v1/
pv:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  # spec api: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-v1/#PersistentVolumeSpec
  spec: {}

# This section is for PV see: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/storage-class-v1/
storageClass:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  parameters: {}
  provisioner: ""
  allowVolumeExpansion: true
  allowedTopologies: []
  mountOptions: []
  reclaimPolicy: false
  volumeBindingMode: ""

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# This section is for NetworkPolicy see: https://kubernetes.io/docs/concepts/services-networking/network-policies/
networkPolicy:
  # Specifies whether a network policy should be created
  enabled: false
  # The name of the network policy to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add to the network policy
  annotations: {}
  labels: {}
  egress:
    - {}
  ingress:
    - {}

# section is for secret see: https://kubernetes.io/docs/concepts/configuration/secret/
secret:
  # Specifies whether this resource should be created
  enabled: false
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add
  annotations: {}
  # Labels to add
  labels: {}
  # types of secret see: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
  type: Opaque
  # need to set with base64
  data: {}
  # without base64
  stringData: {}

# This block is for setting up the certificate for more information can be found here: https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.Certificate
certificate:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  # for more info about spec: https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec
  spec: {}

# This block is for setting up the clusterIssuer for more information can be found here: https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.ClusterIssuer
clusterIssuer:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  # for more info about spec: https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.IssuerSpec
  spec: {}

# This block is for setting up the generic service for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
serviceGeneric:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  # for more info about spec: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#ServiceSpec
  spec: {}
